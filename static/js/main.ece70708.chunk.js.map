{"version":3,"sources":["Item.js","ItemList.js","App.js","actions.js","serviceWorker.js","reducers.js","index.js"],"names":["Item","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","data-elem","id","onClick","increment","item","count","decrement","price","className","value","removeItem","React","Component","ItemList","_this$props","items","map","i","src_Item","App","_this","calculateSum","bind","assertThisInitialized","sum","length","src_ItemList","addCount","removeCount","onIncrement","onDecrement","onRemoveItem","colSpan","type","name","min","pattern","placeholder","onCreateItem","connect","state","dispatch","event","payload","parseInt","target","previousSibling","actions","dataset","elem","Boolean","window","location","hostname","match","initialState","logger","createLogger","store","createStore","arguments","undefined","action","assign","concat","incItems","decItems","splice","newItems","applyMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ece70708.chunk.js","sourcesContent":["import React from 'react';\n\nclass Item extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span data-elem={this.props.id} onClick={this.props.increment}>+</span>\n\t\t\t\t\t\t{this.props.item.count} шт.\n\t\t\t\t\t\t<span data-elem={this.props.id} onClick={this.props.decrement}>-</span>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{this.props.item.price} руб.</td>\n\t\t\t\t\t<td className=\"value\">{this.props.item.value()} руб.</td>\n\t\t\t\t\t<td data-elem={this.props.id} onClick={this.props.removeItem}>&#10006;</td>\n\t\t\t\t</tr>\n\t\t)\n\t}\n}\n\nexport default Item;","import React from 'react';\nimport Item from './Item.js';\n\nclass ItemList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet { items, increment, decrement, removeItem } = this.props;\n\t    items = items.map((item, i) => {\n\t    \treturn <Item item={ item }  \n\t    \t\t\t\t id={ i }\n\t    \t\t\t\t // key={ 'key' + Math.floor(Math.random() * 10000) }\n\t    \t\t\t\t increment={increment}\n\t    \t\t\t\t decrement={decrement}\n\t    \t\t\t\t removeItem={removeItem} />\n\t    });\n\n\t    return (\n\t    \t<tbody>\n\t\t       \t{items} \n\t\t    </tbody>\n\t\t);\n\t}\n}\n\nexport default ItemList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport ItemList from \"./ItemList\";\nimport * as actions from './actions';\n\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return { \n    onCreateItem: (event) => dispatch(actions.createItem(event)),\n    onIncrement:  (event) => dispatch(actions.increment(event)),\n    onDecrement:  (event) => dispatch(actions.decrement(event)),\n    onRemoveItem: (event) => dispatch(actions.removeItem(event))\n  }\n}\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.calculateSum = this.calculateSum.bind(this);\n  }\n\n  calculateSum() {\n    let sum = 0;\n    for (let i = 0; i < this.props.items.length; i++) {\n      sum += this.props.items[i].value();\n    }\n    return sum;\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n            <table>\n              <ItemList items={this.props.items}\n                        addCount={this.addCount}\n                        removeCount={this.removeCount}\n                        increment={this.props.onIncrement}\n                        decrement={this.props.onDecrement}\n                        removeItem={this.props.onRemoveItem} />\n              <tfoot>\n                <tr>\n                  <td colSpan=\"2\">\n                  <input  type=\"number\" \n                          name=\"price\" \n                          min=\"0\"\n                          pattern=\"[0-9]{1,}\"\n                          placeholder=\"Enter price\" />\n                  <span onClick={this.props.onCreateItem}>&#10010;</span>\n                  </td>\n                  <td id=\"sum\">{this.calculateSum()} руб.</td>\n                </tr>\n              </tfoot>\n            </table>\n        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const createItem = (event) => ({\n\ttype: 'CREATE_ITEM',\n\tpayload: parseInt(event.target.previousSibling.value) && parseInt(event.target.previousSibling.value) > 0 ?\n\t parseInt(event.target.previousSibling.value) : 1\n});\n\nexport const increment = (event) => ({\n\ttype: 'INCREMENT',\n\tpayload: parseInt(event.target.dataset.elem)\n});\n\nexport const decrement = (event) => ({\n\ttype: 'DECREMENT',\n\tpayload: parseInt(event.target.dataset.elem)\n});\n\nexport const removeItem = (event) => ({\n\ttype: 'REMOVE_ITEM',\n\tpayload: parseInt(event.target.dataset.elem)\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n\titems: []\n};\n\nexport const setItemsList = (state=initialState, action={}) => {\n\tswitch(action.type) {\n\t\tcase \"CREATE_ITEM\":\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\titems: state.items.concat({\n\t\t        \tcount: 1,\n\t\t        \tprice: action.payload,\n\t\t        \tvalue: function() {return this.count * this.price}\n\t\t    \t})\n\t\t    });\n\t\tcase \"INCREMENT\":\n\t\t\tlet incItems = state.items;\n\t\t\tincItems[action.payload].count += 1;\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\titems: incItems\n\t\t\t});\n\t\tcase \"DECREMENT\":\n\t\t\tlet decItems = state.items;\n\t\t\tif (decItems[action.payload].count > 1) {\n\t\t      decItems[action.payload].count -= 1;\n\t\t    } else if (decItems[action.payload].count <= 1) {\n\t\t      decItems.splice(action.payload, 1)\n\t\t    }\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\titems: decItems\n\t\t\t});\n\t\tcase 'REMOVE_ITEM':\n\t\t\tlet newItems = state.items;\n\t\t    newItems.splice(action.payload, 1);\n\t\t    return Object.assign({}, state, {\n\t\t\t\titems: newItems\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createLogger } from 'redux-logger';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { setItemsList } from './reducers';\n\nconst logger = createLogger();\nconst store = createStore(setItemsList, applyMiddleware(logger));\n\nReactDOM.render(<Provider store={ store }>\n\t\t\t\t\t<App />\n\t\t\t\t</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}